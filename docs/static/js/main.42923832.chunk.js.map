{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GitExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","fetch","encodeURI","resp","json","data","gifs","map","img","id","title","url","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","key","GitExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"iLAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAkB9C,OACI,0BAAMC,SAXW,SAACC,GAElBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,OAMd,2BACIO,KAAK,OACLC,MAAQT,EACRU,SAnBa,SAAEP,GACvBF,EAAeE,EAAEQ,OAAOF,Y,uBCRnBG,EAAO,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,4DAEJ,mCAEE,GAEA,sCANE,SAQAC,MAAM,GAAD,OAFP,sCAEO,oBANT,mCAMS,cAAyCC,UAAUH,GAAnD,kBAJP,KAJE,cAQbI,EARa,gBAUIA,EAAKC,OAVT,uBAUXC,EAVW,EAUXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAE1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXC,IAAG,UAAEH,EAAII,cAAN,aAAE,EAAYC,iBAAiBF,QAjBvB,kBAqBXL,GArBW,4CAAH,sDCEPQ,EAAc,SAAC,GAAuB,EAArBL,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAGrC,OACI,yBAAKI,UAAU,yCACX,4BAAML,EAAN,KACA,yBAAKM,IAAML,EAAMM,IAAMP,MCDtBQ,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECJb,SAAEA,GAAe,IAAD,EAEdd,mBAAS,CAC/BoB,KAAM,GACNc,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAyBxC,OAlBAC,qBAAU,WAENxB,EAASC,GACJwB,MAAM,SAAAC,GAEHC,YAAW,WAEPJ,EAAS,CACLhB,KAAMmB,EACNL,SAAS,MAGd,UAGZ,CAAEpB,IAGEqB,EDpB0BM,CAAc3B,GAAlCa,EADwB,EAC7BP,KAAac,EADgB,EAChBA,QAYrB,OACI,oCACI,gCAAOpB,GACJoB,GAAW,wBAAIJ,UAAU,yCAAd,eACd,yBAAKA,UAAU,aAEPH,EAAOL,KAAK,SAAAC,GAAG,OACX,kBAAC,EAAD,eACImB,IAAMnB,EAAIC,IACLD,UEzBpBoB,EAAe,WAAO,IAAD,EAGM3C,mBAAS,CAAC,cAHhB,mBAGvB4C,EAHuB,KAGX7C,EAHW,KAU9B,OACI,6BACI,4CACA,kBAAC,EAAD,CAAaA,cAAgBA,IAC7B,6BAII6C,EAAWtB,KAAK,SAAAR,GAAQ,OACpB,kBAAC,EAAD,CACI4B,IAAM5B,EACNA,SAAWA,SClBnC+B,IAASC,OAEL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.42923832.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ( {setCategorias} ) => {\r\n\r\n    const [inputValue, setinputValue] = useState('');\r\n\r\n    const handleInputChange= ( e ) =>{\r\n        setinputValue( e.target.value );\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        //detinen el refresco del submit\r\n        e.preventDefault();\r\n\r\n        if( inputValue.trim().length > 2){\r\n            setCategorias( cats => [ inputValue, ...cats ] );\r\n            setinputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type='text'\r\n                value={ inputValue }\r\n                onChange= { handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategorias: PropTypes.func.isRequired\r\n}","export const getGifs = async( category ) =>{\r\n        \r\n    const apiKey = 'KKRMP4kZxWop6pbdjPKG5huvhNVtiQfD';\r\n\r\n    const cantidad = 10;\r\n\r\n    const peticion = 'http://api.giphy.com/v1/gifs/search';\r\n\r\n    const resp = await fetch(`${ peticion }?api_key=${ apiKey }&q=${ encodeURI(category) }&limit=${ cantidad }`);\r\n\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return (gifs);\r\n};","import React from 'react'\r\n\r\nexport const GifGridItem = ( {id, title, url} ) => {\r\n\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__jello\">\r\n            <h4>{ title } </h4>\r\n            <img src={ url } alt={ title } />           \r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n//import React, { useState, useEffect } from 'react'\r\n//import { getGifs } from '../helpers/getGifs';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n    const { data:images, loading } = useFetchGifs( category );  \r\n/* \r\n    const [images, setImages] = useState([]);\r\n\r\n      */\r\n/*\r\n    useEffect( () => {\r\n        getGifs( category )\r\n            .then( setImages );\r\n        \r\n    }, [ category ] );\r\n */\r\n    return (\r\n        <>\r\n            <h3> { category }</h3>\r\n              {loading && <h2 className='animate__animated animate__backInDown'>Cargando...</h2> }\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map( img =>(\r\n                        <GifGridItem \r\n                            key={ img.id }\r\n                            { ...img }\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n         </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport {getGifs} from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    \r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true,\r\n    });\r\n\r\n    useEffect(() => {\r\n        \r\n        getGifs( category )\r\n            .then( imgs =>{\r\n\r\n                setTimeout(() => {\r\n                    \r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    });\r\n\r\n                }, 1000);\r\n            })\r\n\r\n    }, [ category ])\r\n\r\n\r\n    return state;\r\n\r\n}\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GitExpertApp = () => {\r\n\r\n\r\n    const [categorias, setCategorias] = useState(['Samurai X']);\r\n\r\n   /*  const handleAdd = () =>{\r\n        setcategorias( ['HunterXHunter', ...categorias] );\r\n        //setcategorias(cats => ['HunterXHunter', ...categorias] );\r\n    }; */\r\n\r\n    return (\r\n        <div>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategorias={ setCategorias }/>\r\n            <hr/>\r\n            {/* <button onClick={ handleAdd }>Agregar</button> */}\r\n            \r\n            {\r\n                categorias.map( category  => (\r\n                    <GifGrid \r\n                        key={ category }\r\n                        category={ category } \r\n                    />\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\n\nimport { GitExpertApp } from './GitExpertApp';\n\nReactDOM.render(\n  \n    <GitExpertApp/>,  \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}